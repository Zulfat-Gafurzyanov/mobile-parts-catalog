# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
if [ -f .env ]; then
    export $(cat .env | grep -v '^#' | xargs)
else
    echo "‚ùå –§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    echo "–°–æ–∑–¥–∞–π—Ç–µ –µ–≥–æ –∏–∑ .env.example:"
    echo "cp .env.example .env"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
if [ -z "$SERVER_IP" ] || [ -z "$SERVER_USER" ]; then
    echo "‚ùå SERVER_IP –∏–ª–∏ SERVER_USER –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤ .env"
    exit 1
fi

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PROJECT="mobile-parts-catalog"
REMOTE_DIR="/opt/$PROJECT"
SSH_CMD="ssh -p ${SERVER_PORT:-22} $SERVER_USER@$SERVER_IP"
SCP_CMD="scp -P ${SERVER_PORT:-22}"

# –§—É–Ω–∫—Ü–∏—è –¥–µ–ø–ª–æ—è
deploy() {
    echo "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –¥–µ–ø–ª–æ–π –Ω–∞ $SERVER_IP..."
    
    # 1. –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤
    echo "üì¶ –°–æ–∑–¥–∞–µ–º –∞—Ä—Ö–∏–≤..."
    tar -czf deploy.tar.gz \
        --exclude='*.pyc' \
        --exclude='__pycache__' \
        --exclude='venv' \
        --exclude='.git' \
        backend/ input_data/ .env docker-compose.prod.yml 2>/dev/null || true
    
    # 2. –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    echo "üì§ –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    $SSH_CMD "mkdir -p $REMOTE_DIR"
    $SCP_CMD deploy.tar.gz $SERVER_USER@$SERVER_IP:$REMOTE_DIR/
    
    # 3. –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
    echo "üîß –†–∞–∑–≤–æ—Ä–∞—á–∏–≤–∞–µ–º –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ..."
    $SSH_CMD << EOF
        cd $REMOTE_DIR
        tar -xzf deploy.tar.gz
        rm deploy.tar.gz
        
        # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
        docker-compose -f docker-compose.prod.yml down 2>/dev/null || true
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –Ω–æ–≤—ã–µ
        docker-compose -f docker-compose.prod.yml up -d --build
        
        # –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
        sleep 5
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç—É—Å
        docker-compose -f docker-compose.prod.yml ps
EOF
    
    # 4. –£–¥–∞–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π –∞—Ä—Ö–∏–≤
    rm -f deploy.tar.gz
    
    echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω!"
    echo "üìç API –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://$SERVER_IP/api/get_data"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
logs() {
    echo "üìã –õ–æ–≥–∏ —Å —Å–µ—Ä–≤–µ—Ä–∞:"
    $SSH_CMD "cd $REMOTE_DIR && docker-compose -f docker-compose.prod.yml logs --tail=50"
}

# –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞
restart() {
    echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    $SSH_CMD "cd $REMOTE_DIR && docker-compose -f docker-compose.prod.yml restart"
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop() {
    echo "‚èπÔ∏è  –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    $SSH_CMD "cd $REMOTE_DIR && docker-compose -f docker-compose.prod.yml down"
    echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã!"
}

# –§—É–Ω–∫—Ü–∏—è —Å—Ç–∞—Ç—É—Å–∞
status() {
    echo "üìä –°—Ç–∞—Ç—É—Å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤:"
    $SSH_CMD "cd $REMOTE_DIR && docker-compose -f docker-compose.prod.yml ps"
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä
setup() {
    echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä..."
    $SSH_CMD << 'EOF'
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker
        if ! command -v docker &> /dev/null; then
            echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
            curl -fsSL https://get.docker.com | sh
            systemctl enable docker
            systemctl start docker
        else
            echo "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º Docker Compose
        if ! command -v docker-compose &> /dev/null; then
            echo "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose..."
            curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" \
                -o /usr/local/bin/docker-compose
            chmod +x /usr/local/bin/docker-compose
        else
            echo "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        fi
        
        echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
EOF
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
case "${1:-}" in
    deploy)
        deploy
        ;;
    logs)
        logs
        ;;
    restart)
        restart
        ;;
    stop)
        stop
        ;;
    status)
        status
        ;;
    setup)
        setup
        ;;
    *)
        echo "Mobile Parts Catalog - Deploy Script"
        echo "====================================="
        echo ""
        echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: ./deploy-simple.sh [–∫–æ–º–∞–Ω–¥–∞]"
        echo ""
        echo "–ö–æ–º–∞–Ω–¥—ã:"
        echo "  deploy   - –ü–æ–ª–Ω—ã–π –¥–µ–ø–ª–æ–π –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        echo "  logs     - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "  restart  - –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo "  stop     - –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã"
        echo "  status   - –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  setup    - –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        echo ""
        echo "–ü—Ä–∏–º–µ—Ä: ./deploy-simple.sh deploy"
        ;;
esac